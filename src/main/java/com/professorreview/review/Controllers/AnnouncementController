package com.professorreview.review.Controllers;

import com.professorreview.review.DAO.AnnouncementService;
import com.professorreview.review.Entities.Professor;
import com.professorreview.review.Entities.Student;
import com.professorreview.review.Entities.Teacher;
import com.professorreview.review.model.announcementParam;
import com.professorreview.review.model.studentParameters;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@EnableAutoConfiguration
@RequestMapping("/announcement")
public class FeedbackController {

    Logger logger = LoggerFactory.getLogger(FeedbackController.class);

    @Autowired
    AnnouncementService announcementService;

    @GetMapping("/getAnnouncements")
    public ResponseEntity<List<announcementParam>> getAllAnnouncements() {
        return ResponseEntity.ok(announcementService.getAllAnnouncements());
    }

    @GetMapping("getAnAnnouncement/{id}")
    public ResponseEntity<announcementParam> getAnAnnouncement(@PathVariable Long id) {
        return ResponseEntity.ok(announcementService.get(id));
    }

    @PostMapping("/addAnnouncement")
    public ResponseEntity<Long> createAnnouncement(@RequestBody announcementParam announcementparam) {
        return ResponseEntity.ok(announcementService.create(announcementparam));
    }

    @PutMapping("/editAnnouncement")
    public ResponseEntity<Void> updateAnnouncement(@RequestBody announcementParam announcementparam) {
        announcementService.update(announcementparam);
        return ResponseEntity.ok().build();
    }

    @DeleteMapping("deleteAnAnnouncement/{id}")
    public ResponseEntity<Void> deleteAnnouncement(@PathVariable Long id) {
        announcementService.delete(id);
        return ResponseEntity.ok().build();
    }


}
